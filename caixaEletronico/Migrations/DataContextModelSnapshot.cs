// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using caixaEletronico.data;

namespace caixaEletronico.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("caixaEletronico.model.Conta", b =>
                {
                    b.Property<int>("ContaId")
                        .HasColumnType("int");

                    b.Property<string>("NumeroDaConta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("isAtivo")
                        .HasColumnType("bit");

                    b.HasKey("ContaId");

                    b.ToTable("Contas");
                });

            modelBuilder.Entity("caixaEletronico.model.Endereco", b =>
                {
                    b.Property<int>("EnderecoId")
                        .HasColumnType("int");

                    b.Property<string>("Cep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Localidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logradouro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Uf")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EnderecoId");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("caixaEletronico.model.Pessoa", b =>
                {
                    b.Property<int>("PessoaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ContaId")
                        .HasColumnType("int");

                    b.Property<string>("Cpf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataNascimento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EnderecoId")
                        .HasColumnType("int");

                    b.Property<int>("Idade")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoContaID")
                        .HasColumnType("int");

                    b.HasKey("PessoaId");

                    b.ToTable("Pessoas");
                });

            modelBuilder.Entity("caixaEletronico.model.TipoConta", b =>
                {
                    b.Property<int>("TipoContaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoContaId");

                    b.ToTable("TipoContas");

                    b.HasData(
                        new
                        {
                            TipoContaId = 1,
                            Tipo = "Conta Corrente"
                        },
                        new
                        {
                            TipoContaId = 2,
                            Tipo = "Poupança"
                        });
                });

            modelBuilder.Entity("caixaEletronico.model.Transferecia", b =>
                {
                    b.Property<int>("TransfereciaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ContaCreditadoId")
                        .HasColumnType("int");

                    b.Property<int>("ContaId")
                        .HasColumnType("int");

                    b.Property<string>("DataDeTransferencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("descricao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TransfereciaId");

                    b.HasIndex("ContaId");

                    b.ToTable("transferecias");
                });

            modelBuilder.Entity("caixaEletronico.model.Conta", b =>
                {
                    b.HasOne("caixaEletronico.model.Pessoa", "Pessoa")
                        .WithOne("Conta")
                        .HasForeignKey("caixaEletronico.model.Conta", "ContaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("caixaEletronico.model.Endereco", b =>
                {
                    b.HasOne("caixaEletronico.model.Pessoa", "Pessoa")
                        .WithOne("Endereco")
                        .HasForeignKey("caixaEletronico.model.Endereco", "EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("caixaEletronico.model.Transferecia", b =>
                {
                    b.HasOne("caixaEletronico.model.Conta", null)
                        .WithMany("Transferencias")
                        .HasForeignKey("ContaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("caixaEletronico.model.Conta", b =>
                {
                    b.Navigation("Transferencias");
                });

            modelBuilder.Entity("caixaEletronico.model.Pessoa", b =>
                {
                    b.Navigation("Conta");

                    b.Navigation("Endereco");
                });
#pragma warning restore 612, 618
        }
    }
}
